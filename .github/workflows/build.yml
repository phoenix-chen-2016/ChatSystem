name: Build & Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  BuildConfiguration: debug
  ImageRegistry: cr.yggdrasill.dev
  DOCKER_HOST: tcp://localhost:2376

jobs:
  build:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v2

      - name: Restore dependencies
        run: dotnet restore

      - name: build auth
        run: dotnet build -c ${{env.BuildConfiguration}} -t:ContainerBuild -p:DockerfileTag=${{env.ImageRegistry}}/chat/auth:${{github.run_number}} --no-restore AuthServer/AuthServer.csproj
      - name: push auth image
        run: docker push ${{env.ImageRegistry}}/chat/auth:${{github.run_number}}

      - name: build connector
        run: dotnet build -c ${{env.BuildConfiguration}} -t:ContainerBuild -p:DockerfileTag=${{env.ImageRegistry}}/chat/connect:${{github.run_number}} --no-restore ChatConnector/ChatConnector.csproj
      - name: push connector image
        run: docker push ${{env.ImageRegistry}}/chat/connect:${{github.run_number}}

      - name: build chat
        run: dotnet build -c ${{env.BuildConfiguration}} -t:ContainerBuild -p:DockerfileTag=${{env.ImageRegistry}}/chat/chat:${{github.run_number}} --no-restore ChatServer/ChatServer.csproj
      - name: push chat image
        run: docker push ${{env.ImageRegistry}}/chat/chat:${{github.run_number}}

      - name: build room
        run: dotnet build -c ${{env.BuildConfiguration}} -t:ContainerBuild -p:DockerfileTag=${{env.ImageRegistry}}/chat/room:${{github.run_number}} --no-restore RoomServer/RoomServer.csproj
      - name: push room image
        run: docker push ${{env.ImageRegistry}}/chat/room:${{github.run_number}}

      - name: build session
        run: dotnet build -c ${{env.BuildConfiguration}} -t:ContainerBuild -p:DockerfileTag=${{env.ImageRegistry}}/chat/session:${{github.run_number}} --no-restore SessionServer/SessionServer.csproj
      - name: push session image
        run: docker push ${{env.ImageRegistry}}/chat/session:${{github.run_number}}

      - name: build webclient
        run: docker build -f webClient\Dockerfile -t ${{env.ImageRegistry}}/chat/web:${{github.run_number}} webClient
      - name: push webclient image
        run: docker push ${{env.ImageRegistry}}/chat/web:${{github.run_number}}

      - name: set image tag to helm template
        run: |
          $authValues = gc .\k8s\authsystem\values.yaml | ConvertFrom-Yaml
          $authValues.image.tag = "${{github.run_number}}"
          ConvertTo-Yaml $authValues -OutFile .\k8s\authsystem\values.yaml -Force

          $authValues = gc .\k8s\chatsystem\values.yaml | ConvertFrom-Yaml
          $authValues.image.tag = "${{github.run_number}}"
          ConvertTo-Yaml $authValues -OutFile .\k8s\chatsystem\values.yaml -Force

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.2
        with:
          # Artifact name
          name: k8s
          # A file, directory or wildcard pattern that describes what to upload
          path: k8s/**/*

  deploy:
    runs-on: self-hosted
    needs: build
    steps:
      - name: Download a build artifact
        uses: actions/download-artifact@latest
        with:
          name: k8s
          path: k8s
      - name: deploy authsystem
        run: |
          echo '${{ secrets.KUBECONFIG }}' | Out-File -Path kubeconfig
          helm template .\k8s\authsystem --set ingress.hosts[0].host=auth.yggdrasill.dev --set database.connectionString=${{ secrets.CONNECTIONSTRING }} | kubectl apply -f -
          Remove-Item .\kubeconfig
